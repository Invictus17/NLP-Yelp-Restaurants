pam_fit <- pam(gower.dist,
diss = TRUE,
k = i)
sil_width[i] <- pam_fit$silinfo$avg.width
}
# Plot sihouette width (higher is better)
plot(1:max_clusters, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(1:max_clusters, sil_width)
library(Rtsne)
library(ggplot2)
library(dplyr)
num_clusters = 7
pam_fit <- pam(gower.dist,
diss = TRUE,
k = num_clusters)
tsne_obj <- Rtsne(gower.dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit$clustering),
name = df_subset$name)
ggplot(aes(x = X, y = Y), data = tsne_data) +
geom_point(aes(color = cluster))
pam_fit <- pam(gower.dist, diss = TRUE, k = 3)
pam_results <- df_subset %>%
dplyr::select(-name) %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
pam_fit <- pam(gower.dist, diss = TRUE, k = 3)
pam_results <- df_subset %>%
dplyr::select(1,2,3,4) %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
pam_results$the_summary
pam_fit <- pam(gower.dist, diss = TRUE, k = 7)
pam_results <- df_subset %>%
dplyr::select(1,2,3,4) %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
pam_results$the_summary
df <- read.csv('../data/clusteringAD_new.csv')
df_subset <- df[,c(37,39,40)]
df_subset$rating <- as.ordered(df_subset$rating)
df_subset$expensivenss <- as.ordered(df_subset$expensivenss)
summary(df_subset)
library(cluster)
gower.dist <- daisy(df_subset, metric = c("gower"))
summary(gower.dist)
gower_mat <- as.matrix(gower.dist)
# Output most similar pair
df_subset[
which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]),
arr.ind = TRUE)[1, ], ]
# Output most dissimilar pair
df_subset[
which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]),
arr.ind = TRUE)[1, ], ]
max_clusters <- 20
sil_width <- c(NA)
for(i in 2:max_clusters){
pam_fit <- pam(gower.dist,
diss = TRUE,
k = i)
sil_width[i] <- pam_fit$silinfo$avg.width
}
# Plot sihouette width (higher is better)
plot(1:max_clusters, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(1:max_clusters, sil_width)
num_clusters = 3
pam_fit <- pam(gower.dist,
diss = TRUE,
k = num_clusters)
pam_results <- df_subset %>%
dplyr::select(1,2,3,4) %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
num_clusters = 3
pam_fit <- pam(gower.dist,
diss = TRUE,
k = num_clusters)
pam_results <- df_subset %>%
dplyr::select(1,2,3) %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
pam_results$the_summary
library(Rtsne)
library(ggplot2)
library(dplyr)
tsne_obj <- Rtsne(gower.dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit$clustering),
name = df_subset$name)
ggplot(aes(x = X, y = Y), data = tsne_data) +
geom_point(aes(color = cluster))
#------------ DIVISIVE CLUSTERING ------------#
divisive.clust <- diana(as.matrix(gower.dist),
diss = TRUE, keep.diss = TRUE)
plot(divisive.clust, main = "Divisive")
#------------ AGGLOMERATIVE CLUSTERING ------------#
# complete
aggl.clust.c <- hclust(gower.dist, method = "complete")
plot(aggl.clust.c,
main = "Agglomerative, complete linkages")
install.packages("rmarkdown")
install.packages("rmarkdown")
library(dplyr)
num_clusters = 3
pam_fit <- pam(gower.dist,
diss = TRUE,
k = num_clusters)
setwd("/Users/arunavsaikia/Documents/GitHub/NLP-Yelp-Restaurants/Restaurant Clustering/")
df <- read.csv('../data/clusteringAD_new.csv')
df_subset <- df[,c(37,38,39,40)]
df_subset$rating <- as.ordered(df_subset$rating)
df_subset$expensivenss <- as.ordered(df_subset$expensivenss)
summary(df_subset)
library(cluster)
gower.dist <- daisy(df_subset, metric = c("gower"))
summary(gower.dist)
gower_mat <- as.matrix(gower.dist)
# Output most similar pair
df_subset[
which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]),
arr.ind = TRUE)[1, ], ]
# Output most dissimilar pair
df_subset[
which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]),
arr.ind = TRUE)[1, ], ]
max_clusters <- 20
sil_width <- c(NA)
for(i in 2:max_clusters){
pam_fit <- pam(gower.dist,
diss = TRUE,
k = i)
sil_width[i] <- pam_fit$silinfo$avg.width
}
# Plot sihouette width (higher is better)
plot(1:max_clusters, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(1:max_clusters, sil_width)
library(dplyr)
num_clusters = 3
pam_fit <- pam(gower.dist,
diss = TRUE,
k = num_clusters)
pam_results <- df_subset %>%
#dplyr::select(1,2,3) %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
pam_results$the_summary
library(Rtsne)
library(ggplot2)
library(dplyr)
tsne_obj <- Rtsne(gower.dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit$clustering),
name = df_subset$name)
ggplot(aes(x = X, y = Y), data = tsne_data) +
geom_point(aes(color = cluster))
#------------ DIVISIVE CLUSTERING ------------#
divisive.clust <- diana(as.matrix(gower.dist),
diss = TRUE, keep.diss = TRUE)
plot(divisive.clust, main = "Divisive")
#------------ AGGLOMERATIVE CLUSTERING ------------#
# complete
aggl.clust.c <- hclust(gower.dist, method = "complete")
plot(aggl.clust.c,
main = "Agglomerative, complete linkages")
library(dplyr)
num_clusters = 7
pam_fit <- pam(gower.dist,
diss = TRUE,
k = num_clusters)
pam_results <- df_subset %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
pam_results$the_summary
library(Rtsne)
library(ggplot2)
library(dplyr)
tsne_obj <- Rtsne(gower.dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit$clustering),
name = df_subset$name)
ggplot(aes(x = X, y = Y), data = tsne_data) +
geom_point(aes(color = cluster))
#------------ AGGLOMERATIVE CLUSTERING ------------#
# “complete”, “average”, “single”, “ward.D”
aggl.clust.c <- hclust(gower.dist, method = "average")
plot(aggl.clust.c,
main = "Agglomerative, complete linkages")
#------------ AGGLOMERATIVE CLUSTERING ------------#
# “complete”, “average”, “single”, “ward.D”
aggl.clust.c <- hclust(gower.dist, method = "single")
plot(aggl.clust.c,
main = "Agglomerative, complete linkages")
#------------ AGGLOMERATIVE CLUSTERING ------------#
# “complete”, “average”, “single”, “ward.D”
aggl.clust.c <- hclust(gower.dist, method = "ward.D")
plot(aggl.clust.c,
main = "Agglomerative, complete linkages")
#------------ AGGLOMERATIVE CLUSTERING ------------#
# “complete”, “average”, “single”, “ward.D”
aggl.clust.c <- hclust(as.matrix(gower.dist), method = "ward.D")
#------------ AGGLOMERATIVE CLUSTERING ------------#
# “complete”, “average”, “single”, “ward.D”
aggl.clust.c <- hclust(gower.dist, method = "ward.D")
plot(aggl.clust.c,
main = "Agglomerative, complete linkages")
#------------ AGGLOMERATIVE CLUSTERING ------------#
# “complete”, “average”, “single”, “ward.D”
par(mfrow=c(1,1))
aggl.clust.c <- hclust(gower.dist, method = "ward.D")
plot(aggl.clust.c,
main = "Agglomerative, complete linkages")
#------------ AGGLOMERATIVE CLUSTERING ------------#
# “complete”, “average”, “single”, “ward.D”
par(mfrow=c(2,2))
aggl.clust.c <- hclust(gower.dist, method = "complete")
aggl.clust.a <- hclust(gower.dist, method = "average")
aggl.clust.s <- hclust(gower.dist, method = "single")
aggl.clust.w <- hclust(gower.dist, method = "ward.D")
plot(aggl.clust.c,
main = "Agglomerative, complete linkages")
plot(aggl.clust.a,
main = "Agglomerative, average linkages")
plot(aggl.clust.s,
main = "Agglomerative, single linkages")
plot(aggl.clust.w,
main = "Agglomerative, ward linkages")
?diana
#------------ DIVISIVE CLUSTERING ------------#
divisive.clust <- diana(gower.dist,
diss = TRUE, keep.diss = TRUE)
plot(divisive.clust, main = "Divisive")
#------------ DIVISIVE CLUSTERING ------------#
divisive.clust <- diana(gower.dist,
diss = TRUE, keep.diss = FALSE)
plot(divisive.clust, main = "Divisive")
#------------ DIVISIVE CLUSTERING ------------#
divisive.clust <- diana(gower.dist,
diss = TRUE, keep.diss = FALSE)
#plot(divisive.clust, main = "Divisive")
#------------ DIVISIVE CLUSTERING ------------#
divisive.clust <- diana(gower.dist,
diss = TRUE, keep.diss = FALSE)
plot(divisive.clust$diss, main = "Divisive")
#------------ DIVISIVE CLUSTERING ------------#
divisive.clust <- diana(gower.dist,
diss = TRUE, keep.diss = FALSE)
plot(divisive.clust, main = "Divisive")
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
# function to compute coefficient
ac <- function(x) {
agnes(df_subset, method = x)$ac
}
map_dbl(m, ac)
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
# function to compute coefficient
ac <- function(x) {
agnes(df_subset, method = x)$ac
}
map(m, ac)
libaray(purrr)
library(purrr)
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
# function to compute coefficient
ac <- function(x) {
agnes(df_subset, method = x)$ac
}
map(m, ac)
#------------ DIVISIVE CLUSTERING ------------#
divisive.clust <- diana(gower.dist,
diss = TRUE, keep.diss = FALSE)
divisive.clust$dc
pltree(divisive.clust, main = "Divisive")
library(factoextra)
install.packages("factoextra")
library(factoextra)
sub_grp <- cutree(aggl.clust.w, k = 3)
# Number of members in each cluster
# table(sub_grp)
fviz_nbclust(df, FUN = hcut, method = "silhouette")
library(factoextra)
sub_grp <- cutree(aggl.clust.w, k = 3)
# Number of members in each cluster
# table(sub_grp)
fviz_nbclust(df_subset, FUN = hcut, method = "silhouette")
library(factoextra)
sub_grp <- cutree(aggl.clust.w, k = 3)
# Number of members in each cluster
# table(sub_grp)
fviz_nbclust(df_subset, FUN = sub_grp, method = "silhouette")
library(factoextra)
sub_grp <- cutree(aggl.clust.w, k = 3)
# Number of members in each cluster
# table(sub_grp)
fviz_nbclust(df_subset, FUN = aggl.clust.w, method = "silhouette")
?fviz_nbclust
aggl.clust.c$dist.method
?agnes
library(purrr)
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
# function to compute coefficient
ac <- function(x) {
agnes(gower.dist, diss = TRUE, method = x)$ac
}
map(m, ac)
library(factoextra)
sub_grp <- cutree(aggl.clust.w, k = 3)
# Number of members in each cluster
# table(sub_grp)
fviz_nbclust(gower.dist, FUN = hcut, method = "silhouette")
library(factoextra)
sub_grp <- cutree(aggl.clust.w, k = 3)
# Number of members in each cluster
# table(sub_grp)
fviz_nbclust(as.matrix(gower.dist), FUN = hcut, method = "silhouette")
# library(factoextra)
# sub_grp <- cutree(aggl.clust.w, k = 3)
# Number of members in each cluster
# table(sub_grp)
# fviz_nbclust(as.matrix(gower.dist), FUN = hcut, method = "silhouette")
fviz_nbclust(df_subset, FUN = hcut, method = "silhouette")
# library(factoextra)
# sub_grp <- cutree(aggl.clust.w, k = 3)
# Number of members in each cluster
# table(sub_grp)
# fviz_nbclust(as.matrix(gower.dist), FUN = hcut, method = "silhouette")
fviz_nbclust(df_subset, FUN = kmeans, method = "silhouette")
setwd("/Users/arunavsaikia/Documents/GitHub/NLP-Yelp-Restaurants/Restaurant Clustering/")
setwd("/Users/arunavsaikia/Documents/GitHub/NLP-Yelp-Restaurants/Restaurant Clustering/")
---
title: "Mixed Clustering"
author: "Arunav Saikia"
output: github_document
---
<h2> Getting Ready </h2>
**Set working directory**
```{r}
setwd("/Users/arunavsaikia/Documents/GitHub/NLP-Yelp-Restaurants/Restaurant Clustering/")
```
**Explore the data**
df <- read.csv('../data/clusteringAD_new.csv')
df_subset <- df[,c(37,38,39,40)]
df_subset$rating <- as.ordered(df_subset$rating)
df_subset$expensivenss <- as.ordered(df_subset$expensivenss)
summary(df_subset)
df <- read.csv('../data/clusteringAD_new.csv')
df_subset <- df[,c(37,38,39,40)]
df_subset$rating <- as.ordered(df_subset$rating)
df_subset$expensivenss <- as.ordered(df_subset$expensivenss)
df_subset$cuisines <- as.ordered(df_subset$cuisines)
summary(df_subset)
summary(gower.dist)
df_subset[
which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]),
arr.ind = TRUE)[1, ], ]
plot(1:max_clusters, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
max_clusters <- 20
sil_width <- c(NA)
for(i in 2:max_clusters){
pam_fit <- pam(gower.dist,
diss = TRUE,
k = i)
sil_width[i] <- pam_fit$silinfo$avg.width
}
# Plot sihouette width (higher is better)
plot(1:max_clusters, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(1:max_clusters, sil_width)
library(dplyr)
num_clusters = 7
pam_fit <- pam(gower.dist,
diss = TRUE,
k = num_clusters)
pam_results <- df_subset %>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
pam_results$the_summary
library(Rtsne)
library(ggplot2)
library(dplyr)
tsne_obj <- Rtsne(gower.dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit$clustering),
name = df_subset$name)
ggplot(aes(x = X, y = Y), data = tsne_data) +
geom_point(aes(color = cluster))
#------------ DIVISIVE CLUSTERING ------------#
divisive.clust <- diana(gower.dist,
diss = TRUE, keep.diss = FALSE)
divisive.clust$dc
pltree(divisive.clust, main = "Divisive")
#------------ AGGLOMERATIVE CLUSTERING ------------#
# “complete”, “average”, “single”, “ward.D”
par(mfrow=c(2,2))
aggl.clust.c <- hclust(gower.dist, method = "complete")
aggl.clust.a <- hclust(gower.dist, method = "average")
aggl.clust.s <- hclust(gower.dist, method = "single")
aggl.clust.w <- hclust(gower.dist, method = "ward.D")
plot(aggl.clust.c,
main = "Agglomerative, complete linkages")
plot(aggl.clust.a,
main = "Agglomerative, average linkages")
plot(aggl.clust.s,
main = "Agglomerative, single linkages")
plot(aggl.clust.w,
main = "Agglomerative, ward linkages")
library(factoextra)
# sub_grp <- cutree(aggl.clust.w, k = 3)
# Number of members in each cluster
# table(sub_grp)
fviz_nbclust(as.matrix(gower.dist), FUN = hcut, method = "silhouette")
#fviz_nbclust(df_subset, FUN = kmeans, method = "silhouette")
sub_grp <- cutree(aggl.clust.w, k = 6)
plot(aggl.clust.w, cex = 0.6)
rect.hclust(aggl.clust.w, k = 6, border = 2:5)
sub_grp <- cutree(aggl.clust.w, k = 6)
plot(aggl.clust.w, cex = 0.6)
rect.hclust(aggl.clust.w, k = 6, border = 1:5)
?rect.hclust
sub_grp <- cutree(aggl.clust.w, k = 6)
plot(aggl.clust.w, cex = 0.6)
rect.hclust(aggl.clust.w, k = 6, border = 3:4)
sub_grp <- cutree(aggl.clust.w, k = 6)
plot(aggl.clust.w, cex = 0.6)
rect.hclust(aggl.clust.w, k = 6, border = 1:6)
library("dendextend")
dendro <- as.dendrogram(aggl.clust.w)
dendro.col <- dendro %>%
set("branches_k_color", k = 6, value =   c("darkslategray", "darkslategray4", "darkslategray3", "gold3", "darkcyan", "cyan3")) %>%
set("branches_lwd", 0.6) %>%
set("labels_colors",
value = c("darkslategray")) %>%
set("labels_cex", 0.5)
ggd1 <- as.ggdend(dendro.col)
ggplot(ggd1, theme = theme_minimal()) +
labs(x = "Num. observations", y = "Height", title = "Dendrogram, k = 6")
library("dendextend")
dendro <- as.dendrogram(aggl.clust.w)
dendro.col <- dendro %>%
set("branches_k_color", k = 6, value =   c("darkslategray", "darkslategray4", "darkslategray3", "gold3", "darkcyan", "cyan3")) %>%
set("branches_lwd", 0.6) %>%
set("labels_colors",
value = c("darkslategray")) %>%
set("labels_cex", 0.5)
ggd1 <- as.ggdend(dendro.col)
# ggplot(ggd1, theme = theme_minimal()) +
#   labs(x = "Num. observations", y = "Height", title = "Dendrogram, k = 6")
ggplot(ggd1, labels = T) +
scale_y_reverse(expand = c(0.2, 0)) +
coord_polar(theta="x")
aggl.clust.w$labels
sub_grp
tsne_obj <- Rtsne(gower.dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(sub_grp),
name = df_subset$name)
ggplot(aes(x = X, y = Y), data = tsne_data) +
geom_point(aes(color = cluster))
tsne_obj <- Rtsne(gower.dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(sub_grp),
name = df_subset$name)
ggplot(aes(x = X, y = Y), data = tsne_data) +
geom_point(aes(color = cluster))
tsne_obj <- Rtsne(gower.dist, is_distance = TRUE)
tsne_data <- tsne_obj$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(sub_grp),
name = df_subset$name)
ggplot(aes(x = X, y = Y), data = tsne_data) +
geom_point(aes(color = cluster))
algo_results <- df_subset %>%
mutate(cluster = sub_grp) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
algo_results$the_summary
